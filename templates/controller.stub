<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Http\Resources\{{ClassName}}Resource;
use App\Services\{{ClassName}}Service;
use App\Http\Requests\{{ClassName}}Request;
use Illuminate\Http\Request;

class {{ClassName}}Controller extends Controller
{
    protected {{ClassName}}Service $service;

    public function __construct({{ClassName}}Service $service)
    {
        $this->service = $service;
    }

    public function index(Request $request)
    {
        $filters = $request->only({{filterable_array}});
        $perPage = (int) $request->get('per_page', 15);
        $sort = $request->get('sort');
        $direction = $request->get('direction', 'asc');

        $result = $this->service->paginate(['per_page' => $perPage, 'filters' => $filters, 'sort' => $sort, 'direction' => $direction]);

        return {{ClassName}}Resource::collection($result);
    }

    public function store({{ClassName}}Request $request)
    {
        $model = $this->service->create($request->validated());
        return (new {{ClassName}}Resource($model))->response()->setStatusCode(201);
    }

    public function show($id)
    {
        $model = $this->service->find($id);
        return new {{ClassName}}Resource($model);
    }

    public function update({{ClassName}}Request $request, $id)
    {
        $model = $this->service->update($id, $request->validated());
        return new {{ClassName}}Resource($model);
    }

    public function destroy($id)
    {
        $this->service->delete($id);
        return response()->noContent();
    }
}
